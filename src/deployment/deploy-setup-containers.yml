- name: Configure containers on app server
  hosts: appserver
  connection: ssh
  become: true

  tasks:
    # Setup secrets so containers can access GCP resources
    - name: Create secrets directory
      file:
        path: "/srv/secrets"
        state: "directory"
        mode: 0755
    - name: Copy service account key file
      copy:
        src: ../secrets/gcp-service.json
        dest: "/srv/secrets/gcp-service.json"
        mode: 0644
    - name: Authenticate gcloud using service account
      shell: "gcloud auth activate-service-account --key-file /srv/secrets/gcp-service.json"

    # Create Docker network
    - name: Create network
      docker_network:
        name: "{{docker_network_name}}"
        driver: "bridge"
        attachable: "yes"

    - name: Copy docker tag file
      copy:
        src: .docker-tag
        dest: /srv/.docker-tag
        mode: 0644
    - name: "Get docker tag"
      shell: "cat /srv/.docker-tag"
      register: tag
    - name: Print tag
      debug:
        var: tag.stdout

    # Persistent storage setup
    - name: Create persistent directory
      file:
        path: "/mnt/disk-1/persistent"
        state: "directory"
        mode: 0777
    - name: Create chromadb directory
      file:
        path: "/mnt/disk-1/chromadb"
        state: "directory"
        mode: 0777

    # Load Vector DB
    - name: Load Vector DB
      shell: docker run --rm -it \
        -e GCP_PROJECT="{{ gcp_project }}" \
        -e CHROMADB_HOST="vector-db" \
        -e CHROMADB_PORT="8000" \
        -e GOOGLE_APPLICATION_CREDENTIALS="/secrets/gcp-service.json" \
        -v /srv/secrets:/secrets \
        --network "{{docker_network_name}}" \
        "gcr.io/{{ gcp_project }}/rag-data-pipeline:{{ tag.stdout }}" cli.py --download --load --chunk_type recursive-split

    # Create service containers
    - name: Create finetune_data container
      docker_container:
        name: "finetune-data"
        image: "gcr.io/{{ gcp_project }}/finetune-data:{{ tag.stdout }}"
        state: started
        recreate: yes
        networks:
          - name: "{{docker_network_name}}"

    - name: Create finetune_model container
      docker_container:
        name: "finetune-model"
        image: "gcr.io/{{ gcp_project }}/finetune-model:{{ tag.stdout }}"
        state: started
        recreate: yes
        networks:
          - name: "{{docker_network_name}}"

    - name: Create rag_model container
      docker_container:
        name: "rag-model"
        image: "gcr.io/{{ gcp_project }}/rag-data-pipeline:{{ tag.stdout }}"
        state: started
        recreate: yes
        networks:
          - name: "{{docker_network_name}}"
        volumes:
          - /mnt/disk-1/persistent:/persistent
          - /srv/secrets:/secrets

    - name: Create service container
      docker_container:
        name: "service"
        image: "gcr.io/{{ gcp_project }}/service:{{ tag.stdout }}"
        state: started
        recreate: yes
        published_ports:
          - 80:80
        networks:
          - name: "{{docker_network_name}}"
        volumes:
          - /mnt/disk-1/persistent:/persistent
          - /srv/secrets:/secrets

    - name: Check if containers are running
      shell: docker ps

    - name: "Remove all unused containers"
      shell: docker system prune -a -f
