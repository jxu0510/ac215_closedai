networks:
  llm-rag-network:
    driver: bridge

services:
  datapipeline:
    container_name: llm-rag-datapipeline
    build:
      context: ./rag_data_pipeline  # Path to the Dockerfile for datapipeline
    image: llm-rag-datapipeline
    volumes:
      - ../../ac215_closedai:/app
      - ../secrets:/secrets  # Mount your secrets directory
    environment:
      GCP_PROJECT: ${GCP_PROJECT}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    depends_on:
      - chromadb  # Ensure chromadb starts before datapipeline
    networks:
      - llm-rag-network

  model:
    container_name: llm-rag-model
    build:
      context: ./rag_model  # Path to the Dockerfile for models
    image: llm-rag-model
    volumes:
      - ../../ac215_closedai:/app
      - ../secrets:/secrets  # Mount your secrets directory

    environment:
      GCP_PROJECT: ${GCP_PROJECT}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}

    depends_on:
      - chromadb  # Ensure chromadb starts before model
    networks:
      - llm-rag-network

  empathos:
    container_name: empathos
    ports:
      - 8080:8080  
    build:
      context: ./service  # Path to the Dockerfile for models
    image: empathos
    volumes:
      - ../../ac215_closedai:/app
      - ../secrets:/secrets  # Mount your secrets directory
    
    environment:
      GCP_PROJECT: ${GCP_PROJECT}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    
    depends_on:
      - chromadb  # Ensure chromadb starts before model
    networks:
      - llm-rag-network

  chromadb:
    image: chromadb/chroma:latest
    container_name: llm-rag-chromadb
    ports:
      - 8000:8000  # chromadb service port
    volumes:
      - ../docker-volumes/chromadb:/chroma/chroma  # Persistent storage for chromadb
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]  # For development, restrict in production
    networks:
      - llm-rag-network

  finetune-model:
    container_name: llm-finetune-model
    build:
      context: ./finetune_model
    image: finetune-model
    volumes:
      - ../../ac215_closedai:/app
      - ../secrets:/secrets
    environment:
      GCP_PROJECT: ${GCP_PROJECT}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
    networks:
      - llm-rag-network

  finetune-data:
    container_name: llm-finetune-data
    build:
      context: ./finetune_data
    image: finetune-data
    volumes:
      - ../../ac215_closedai:/app
      - ../secrets:/secrets
    environment:
      GCP_PROJECT: ${GCP_PROJECT}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
    networks:
      - llm-rag-network
